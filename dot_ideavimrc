source ~/.vimrc
source ~/.vimrc.local

set notimeout
let mapleader = ";"
set scrolloff=10
set relativenumber
Plug 'machakann/vim-highlightedyank'
set incsearch
set easymotion
set clipboard+=unnamed
set clipboard+=ideaput
set ideajoin
set idearefactormode=visual

function! CtrlRemap(letter)
    if g:os == "MacOS"
        execute 'sethandler' '<D-' . a:letter . '>' 'a:vim'
        execute 'inoremap' '<D-' . a:letter . '>' '<C-' . a:letter . '>'
        execute 'nnoremap' '<D-' . a:letter . '>' '<C-' . a:letter . '>'
    else
        execute 'sethandler' '<C-' . a:letter . '>' 'a:vim'
    endif
endfunction

function! CtrlActionNI(letter, action)
    if g:os == "MacOS"
        execute 'map' '<D-' . a:letter . '>' '<Action>(' . a:action . ')'
        execute 'inoremap' '<D-' . a:letter . '>' ':action ' . a:action . '<CR>'
    else
        execute 'map' '<C-' . a:letter . '>' '<Action>(' . a:action . ')'
        execute 'inoremap' '<C-' . a:letter . '>' ':action ' . a:action . '<CR>'
    endif
endfunction

call CtrlRemap('Q')
call CtrlRemap('W')
call CtrlRemap('E')
call CtrlRemap('R')
call CtrlRemap('T')
call CtrlRemap('Y')
call CtrlRemap('U')
call CtrlRemap('I')
call CtrlRemap('O')
call CtrlRemap('P')
call CtrlRemap('A')
call CtrlRemap('S')
call CtrlRemap('D')
call CtrlRemap('F')
call CtrlRemap('G')
call CtrlRemap('H')
call CtrlRemap('J')
call CtrlRemap('K')
call CtrlRemap('L')
call CtrlRemap('Z')
call CtrlRemap('X')
call CtrlRemap('C')
call CtrlRemap('V')
call CtrlRemap('B')
call CtrlRemap('N')
call CtrlRemap('M')

" Configuration management
nnoremap <Leader>.a :e ~/.atamanrc.config<CR>
nnoremap <Leader>.v :e ~/.ideavimrc<CR>
nnoremap <Leader>.t :e ~/.tmux.conf<CR>
nnoremap <Leader>.y :e ~/.config/yabai/yabairc<CR>
nnoremap <Leader>.s :e ~/.config/skhd/skhdrc<CR>
nnoremap <Leader>.k :e ~/.config/karabiner/karabiner.json<CR>
map <Leader>.r <Action>(IdeaVim.ReloadVimRc.reload)

call CtrlActionNI("E", "ShowErrorDescription")
call CtrlActionNI("P", "ParameterInfo")
call CtrlActionNI("Q", "QuickJavaDoc")

" Navigation
map gz <Action>(Back)
map gf <Action>(Forward)
map gn <Action>(GotoNextError)
map gN <Action>(GotoPreviousError)
map gi <Action>(GotoImplementation)
map gu <Action>(ShowUsages)
map gI <Action>(GotoSuperMethod)
map gd <Action>(GotoDeclaration)
map gD <Action>(GotoTypeDeclaration)
map gw <Action>(SelectInProjectView)

nnoremap GG G
map Gu <Action>(FindUsages)
map Gs <Action>(GotoSymbol)
map Gn <Action>(GotoClass)
map Gf <Action>(GotoFile)
map Gl <Action>(RecentLocations)
map Gr <Action>(RecentFiles)
map GR <Action>(RecentChangedFiles)

" Tool Windows
call CtrlActionNI("F", "JumpToLastWindow")
call CtrlActionNI("X", "HideAllWindows")

" Search
map / <Action>(Find)
map ? <Action>(Replace)
call CtrlActionNI("/", "CommentByLineComment")
map n <Action>(FindNext)
map N <Action>(FindPrevious)

" Misc
map <Leader>s <Action>(SaveAll)
map u <Action>($Undo)
map U <Action>($Redo)
call CtrlActionNI('Z', '$Undo')
call CtrlActionNI('R', '$Redo')
if g:os == "MacOS"
    nnoremap <D-C> Y
    vnoremap <D-C> y
    nnoremap <D-V> p
    inoremap <D-V> <C-R>+
else
    nnoremap <C-C> Y
    vnoremap <C-C> y
    nnoremap <C-V> p
    inoremap <C-V> <C-R>+
endif

" Tabs
call CtrlActionNI('W', 'CloseContent')
call CtrlActionNI('L', 'NextTab')
call CtrlActionNI('H', 'PreviousTab')

" Splitters
call CtrlActionNI('J', 'NextSplitter')
call CtrlActionNI('K', 'PrevSplitter')

" Ataman Plugin
map <Space> <Action>(LeaderAction)
