source ~/.vimrc
source ~/.vimrc.local

set notimeout
let mapleader = " "
set scrolloff=10
set relativenumber
Plug 'machakann/vim-highlightedyank'
set incsearch
set easymotion
set clipboard+=unnamed
set clipboard+=ideaput
set ideajoin
set idearefactormode=visual
set which-key

function! CtrlRemap(letter)
    if g:os == "MacOS"
        execute 'sethandler' '<D-' . a:letter . '>' 'a:vim'
        execute 'inoremap' '<D-' . a:letter . '>' '<C-' . a:letter . '>'
        execute 'nnoremap' '<D-' . a:letter . '>' '<C-' . a:letter . '>'
    else
        execute 'sethandler' '<C-' . a:letter . '>' 'a:vim'
    endif
endfunction

function! CtrlActionNI(letter, action)
    if g:os == "MacOS"
        execute 'map' '<D-' . a:letter . '>' '<Action>(' . a:action . ')'
        execute 'inoremap' '<D-' . a:letter . '>' ':action ' . a:action . '<CR>'
    else
        execute 'map' '<C-' . a:letter . '>' '<Action>(' . a:action . ')'
        execute 'inoremap' '<C-' . a:letter . '>' ':action ' . a:action . '<CR>'
    endif
endfunction

call CtrlRemap('Q')
call CtrlRemap('W')
call CtrlRemap('E')
call CtrlRemap('R')
call CtrlRemap('T')
call CtrlRemap('Y')
call CtrlRemap('U')
call CtrlRemap('I')
call CtrlRemap('O')
call CtrlRemap('P')
call CtrlRemap('A')
call CtrlRemap('S')
call CtrlRemap('D')
call CtrlRemap('F')
call CtrlRemap('G')
call CtrlRemap('H')
call CtrlRemap('J')
call CtrlRemap('K')
call CtrlRemap('L')
call CtrlRemap('Z')
call CtrlRemap('X')
call CtrlRemap('C')
call CtrlRemap('V')
call CtrlRemap('B')
call CtrlRemap('N')
call CtrlRemap('M')

" Navigation
map gz <Action>(Back)
map [ <Action>(Back)
map gf <Action>(Forward)
map ] <Action>(Forward)
map gn <Action>(GotoNextError)
map gN <Action>(GotoPreviousError)
map gi <Action>(GotoImplementation)
map gu <Action>(ShowUsages)
map gI <Action>(GotoSuperMethod)
map gd <Action>(GotoDeclaration)
map gD <Action>(GotoTypeDeclaration)
map gw <Action>(SelectInProjectView)
map gc <Action>(CommentByLineComment)
map gr <Action>(RecentFiles)
map gh <Action>(ShowTypeBookmarks)

" Tool Windows
call CtrlActionNI("F", "JumpToLastWindow")
call CtrlActionNI("X", "HideAllWindows")

" Search
map / <Action>(Find)
map ? <Action>(Replace)
call CtrlActionNI("/", "CommentByLineComment")
map n <Action>(FindNext)
map N <Action>(FindPrevious)

" Misc
map u <Action>($Undo)
map U <Action>($Redo)

if g:os == "MacOS"
    nnoremap <D-C> Y
    vnoremap <D-C> y
    nnoremap <D-V> p
    inoremap <D-V> <C-R>+
else
    nnoremap <C-C> Y
    vnoremap <C-C> y
    nnoremap <C-V> p
    inoremap <C-V> <C-R>+
endif

map L <Action>(NextTab)
map H <Action>(PreviousTab)
map J <Action>(MethodDown)
map K <Action>(MethodUp)

call CtrlActionNI("E", "ShowErrorDescription")
call CtrlActionNI("P", "ParameterInfo")
call CtrlActionNI("Q", "QuickJavaDoc")

" Ataman Plugin
map <Space> <Action>(LeaderAction)

" Configuration management
"map <Leader>.ve :e ~/.ideavimrc<CR>
"map <Leader>.vr <Action>(IdeaVim.ReloadVimRc.reload)
"map <Leader>.vt <Action>(VimFindActionIdAction)
"
"map <Leader><Leader> <Action>(GotoFile)
"map <Leader>sa <Action>(GotoAction)
"map <Leader>sc <Action>(GotoClass)
"map <Leader>sf <Action>(GotoFile)
"map <Leader>ss <Action>(GotoSymbol)
"map <Leader>sF <Action>(FindInPath)
"
"map <Leader>bs <Action>(SaveAll)
"map <Leader>bd <Action>(CloseContent)
"
"map <Leader>wv <Action>(SplitVertically)
"map <Leader>ws <Action>(SplitHorizontally)
"map <Leader>wl <Action>(NextSplitter)
"map <Leader>wh <Action>(PrevSplitter)
"map <Leader>wd <Action>(CloseAllEditors)
"
"map <Leader>op <Action>(SelectInProjectView)
"map <Leader>oP <Action>($LRU)
"
"map <Leader>ga <Action>(ChangesView.AddUnversioned)
"map <Leader>gA <Action>(Git.Stage.Add.Tracked)
"map <Leader>gb <Action>(Git.Branches)
"map <Leader>bn <Action>(Git.CreateNewBranch)
"map <Leader>gc <Action>(Git.Commit.Stage)
"map <Leader>gf <Action>(Git.Fetch)
"map <Leader>gp <Action>(Git.Pull)
"map <Leader>gP <Action>(Git.Push)
"map <Leader>gT <Action>(Git.Tag)
"map <Leader>go <Action>(Github.Open.In.Browser)
"map <Leader>gy <Action>(Github.Copy.Link.To.Github)
"map <Leader>gs <Action>(Git.Stash)
"map <Leader>gS <Action>(Git.Unstash)
"map <Leader>gl <Action>(Vcs.Show.Log)
"map <Leader>gR <Action>(ChangesView.Revert)
"
"map <Leader>ca <Action>(ShowIntentionActions)
"map <Leader>cc <Action>(CommentByLineComment)
"map <Leader>cl <Action>(ReformatCode)
"map <Leader>cr <Action>(RenameElement)
"map <Leader>cR <Action>(RefactoringMenu)
"
"map <Leader>fn <Action>(NewElement)
"map <Leader>fr <Action>(RenameFile)
"map <Leader>fs <Action>(Synchronize)
"map <Leader>ff <Action>(ShowNavBar)
"map <Leader>fd <Action>($Delete)
"
"map <Leader>xv <Action>(Tool_Go_go vet)
"map <Leader>xt <Action>(Tool_Go_go mod tidy)
"map <Leader>xm <Action>(Tool_Nest_mbimports)
"map <Leader>xn <Action>(Tool_Nest_nest)
"map <Leader>xl <Action>(Tool_Nest_mblint)
"map <Leader>xe <Action>(Javascript.Linters.EsLint.Fix)
